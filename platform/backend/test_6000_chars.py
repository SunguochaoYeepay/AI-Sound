#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
测试14B模型对6000字长章节的处理能力
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import asyncio
import logging
import time
from app.detectors.ollama_character_detector import OllamaCharacterDetector

# 设置日志
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def test_6000_char_chapter():
    """测试6000字章节处理能力"""
    
    # 构造6000字左右的测试文本
    test_text = """
    第一章 重生之路
    
    "咳咳——" 一阵剧烈的咳嗽声打破了深夜的宁静。林渊睁开眼睛，发现自己正躺在一张破旧的木床上，四周是简陋的土墙和茅草屋顶。这里不是他熟悉的现代都市，而是一个完全陌生的地方。
    
    "这...这是哪里？" 林渊挣扎着坐起身，脑袋里一阵眩晕。突然，大量不属于他的记忆涌入脑海。原来这具身体的主人也叫林渊，是这个叫做青石村的一个普通村民。
    
    "小渊，你醒了！" 一个中年妇女推门而入，脸上满是关切。她是林渊的娘，王氏。"你已经昏迷了三天三夜，可吓死娘了。"
    
    "娘..." 林渊看着眼前这个朴实的女人，心中涌起一股暖流。在现代社会，他是个孤儿，从未体验过母爱的温暖。
    
    王氏摸了摸林渊的额头，松了一口气："不烧了，看来是真的好了。来，娘给你熬了粥，趁热喝了吧。"
    
    "谢谢娘。" 林渊接过粥碗，温热的粥水顺着喉咙流下，温暖着他的胃。这个世界虽然贫穷，但有家的感觉真好。
    
    就在这时，门外传来一阵嘈杂的声音。
    
    "王氏，你儿子欠我们家的银子什么时候还？" 一个粗犷的男声响起。
    
    王氏脸色一变，小声对林渊说："是李老财，你爹生病时向他借了十两银子，现在..."
    
    "娘，我出去看看。" 林渊放下粥碗，走向门外。
    
    门外站着一个大腹便便的中年男子，正是村里的恶霸李老财。他身后跟着几个五大三粗的打手。
    
    "李老财，我们家的银子会还的，只是需要一点时间。" 林渊平静地说道。
    
    "时间？" 李老财冷笑道："你爹都死了半年了，还要什么时间？今天不还银子，就把这房子抵债！"
    
    "不可能！" 林渊的语气变得严厉："我爹的债我会还，但绝不会让你们欺负我娘。"
    
    李老财眯起眼睛："小子，你是想找死吗？"
    
    "找死的是你们。" 林渊冷冷地说道。他在现代社会学过武术，虽然这具身体很弱，但对付几个地痞还是可以的。
    
    李老财身后的打手们摩拳擦掌，准备动手。
    
    "住手！" 一个威严的声音响起。村长张伯伯匆匆赶来。
    
    "张村长，这是我们之间的私事。" 李老财有些忌惮地说。
    
    张伯伯看向林渊："小渊，你爹欠的债确实应该还，但李老财，你也不能欺人太甚。"
    
    "张村长说得对。" 林渊点头道："我会在一个月内还清债务。"
    
    "一个月？" 李老财不满地说："我凭什么相信你？"
    
    "因为我有办法挣钱。" 林渊自信地说。在现代社会的经验让他知道，即使在古代，商机也是无处不在的。
    
    张伯伯思考了一下："这样吧，给小渊一个月时间。如果到时候还不上，我张某人亲自出面解决。"
    
    李老财权衡了一下，最终点头："好，就一个月。但如果到时候还不上，这房子就是我的了！"
    
    说完，李老财带着手下离开了。
    
    "小渊，你真的有办法挣钱吗？" 王氏担心地问。
    
    "娘，相信我。" 林渊握住母亲的手："我不会让任何人欺负你的。"
    
    第二天一早，林渊来到了镇上的集市。这里虽然比不上现代的商业街，但也算是热闹非凡。各种小摊贩在叫卖着自己的商品。
    
    "糖葫芦，又酸又甜的糖葫芦！" 一个老头在卖糖葫芦。
    
    "包子，热腾腾的包子！" 一个妇女在卖包子。
    
    林渊仔细观察着这个古代集市，寻找着商机。突然，他的目光停在了一个卖香料的摊位上。
    
    "老板，这些香料都是从哪里来的？" 林渊询问道。
    
    香料商人是个瘦弱的中年男子，看起来很憔悴："这些都是从外地运来的，成本很高。"
    
    "那你们有胡椒吗？" 林渊问。
    
    "胡椒？" 香料商人摇头："那是很贵重的香料，我们这小地方卖不起。"
    
    林渊心中一动。在现代社会，他了解到胡椒在古代是极其贵重的香料，甚至被称为"黑色黄金"。如果能找到胡椒的货源...
    
    "如果我能给你提供胡椒，你愿意收购吗？" 林渊试探性地问。
    
    香料商人眼睛一亮："你真的能弄到胡椒？如果是真的，我愿意高价收购！"
    
    "好，给我几天时间。" 林渊满意地离开了。
    
    其实，林渊并没有胡椒的货源。但他知道，在这个时代，很多"稀有"的东西其实在其他地方并不稀有。关键是要找到正确的渠道。
    
    接下来的几天，林渊走遍了附近的几个村镇，终于在一个偏僻的山村里找到了一个老药农。
    
    "老人家，您知道胡椒这种香料吗？" 林渊询问道。
    
    老药农点点头："胡椒啊，我知道。以前山里有一些野生的，但现在很少了。"
    
    "您能带我去看看吗？我愿意付报酬。" 林渊请求道。
    
    老药农考虑了一下："可以，但山路很险，你要小心。"
    
    第二天，林渊跟着老药农进入了深山。经过一天的跋涉，他们终于找到了一片野生胡椒林。
    
    "这些就是胡椒吗？" 林渊看着眼前的植物，心中激动不已。
    
    "是的，这些都是上好的胡椒。" 老药农说道："不过采摘很麻烦，而且要晒干才能用。"
    
    "没关系，我会处理的。" 林渊开始采摘胡椒。
    
    一周后，林渊终于处理好了第一批胡椒。他来到镇上的香料摊位。
    
    "老板，我的胡椒弄到了。" 林渊拿出了一小袋胡椒。
    
    香料商人仔细检查了一下，眼中闪过惊喜："这是真的胡椒！品质还很好。我愿意出二十两银子买下这些。"
    
    "成交！" 林渊爽快地答应了。
    
    二十两银子，足够还清债务了。林渊心中的石头终于落地了。
    
    回到家里，林渊把银子交给了王氏："娘，债务解决了。"
    
    王氏看着手中的银子，眼中含着眼泪："小渊，你真的长大了。"
    
    "这只是开始。" 林渊握住母亲的手："我会让我们家过上好日子的。"
    
    就在这时，门外又传来了李老财的声音。
    
    "王氏，银子准备好了吗？" 李老财带着手下又来了。
    
    "准备好了。" 林渊走出门外，把银子递给了李老财。
    
    李老财接过银子，仔细数了数，脸上露出了不甘的表情："算你运气好。"
    
    "我们之间的债务已经清了。" 林渊冷静地说道："希望你以后不要再来骚扰我们家。"
    
    李老财狠狠地看了林渊一眼，带着手下离开了。
    
    张伯伯走过来，拍了拍林渊的肩膀："小渊，你做得很好。"
    
    "谢谢张伯伯。" 林渊感激地说道。
    
    从此，林渊开始了他在这个古代世界的新生活。他利用现代的知识和经验，在这个古代世界里开创了属于自己的一片天地。
    """ * 3  # 重复3次达到约6000字
    
    try:
        # 初始化检测器 - 使用智能模型选择
        logger.info("🚀 初始化智能模型选择检测器...")
        detector = OllamaCharacterDetector(model_name="auto")
        
        # 构建测试章节信息
        chapter_info = {
            "chapter_id": 1,
            "chapter_title": "第一章 重生之路",
            "chapter_number": 1,
            "book_title": "重生古代发家致富记",
            "session_id": "test_6000_char_session"
        }
        
        text_length = len(test_text)
        logger.info(f"📝 测试文本长度: {text_length}字符")
        
        # 记录开始时间
        start_time = time.time()
        
        # 执行分析
        logger.info("🔍 开始分析6000字章节...")
        result = await detector.analyze_text(test_text, chapter_info)
        
        # 记录结束时间
        end_time = time.time()
        processing_time = end_time - start_time
        
        # 输出分析结果
        logger.info("=" * 80)
        logger.info("📊 6000字章节分析结果:")
        logger.info(f"✅ 处理时间: {processing_time:.2f}秒")
        logger.info(f"✅ 文本长度: {text_length}字符")
        logger.info(f"✅ 识别角色数量: {len(result['detected_characters'])}")
        logger.info(f"✅ 分段数量: {len(result['segments'])}")
        
        # 处理统计
        if 'processing_stats' in result:
            stats = result['processing_stats']
            logger.info(f"📈 处理统计:")
            logger.info(f"  - 分析方法: {stats.get('analysis_method', 'N/A')}")
            logger.info(f"  - 分块数量: {stats.get('chunk_count', 'N/A')}")
            logger.info(f"  - 完整性校验: {stats.get('completeness_validated', 'N/A')}")
            logger.info(f"  - AI模型: {stats.get('ai_model', 'N/A')}")
            logger.info(f"  - 处理时间: {stats.get('processing_time', 'N/A')}秒")
        
        # 性能评估
        logger.info("\n🎯 性能评估:")
        chars_per_second = text_length / processing_time
        logger.info(f"  - 处理速度: {chars_per_second:.0f}字符/秒")
        
        if processing_time < 30:
            logger.info("  ✅ 处理速度: 优秀 (< 30秒)")
        elif processing_time < 60:
            logger.info("  ⚠️ 处理速度: 良好 (30-60秒)")
        else:
            logger.info("  ❌ 处理速度: 需要优化 (> 60秒)")
        
        # 分块效果评估
        if stats.get('chunk_count', 1) > 1:
            logger.info(f"  ✅ 分块处理: 启用 ({stats.get('chunk_count')}块)")
        else:
            logger.info(f"  ⚠️ 分块处理: 未启用")
        
        return result
        
    except Exception as e:
        logger.error(f"❌ 6000字章节分析失败: {str(e)}")
        import traceback
        traceback.print_exc()
        return None

if __name__ == "__main__":
    asyncio.run(test_6000_char_chapter()) 